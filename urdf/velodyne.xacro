<?xml version="1.0"?>
<robot name="velodyne" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:macro name="VLP" params="*origin name:=velodyne topic:=/velodyne_points organize_cloud:=false hz:=10 lasers:=16 
  samples:=1800 collision_range:=1.0 min_range:=1.0 max_range:=130.0 
  noise:=0.008 hmin_angle:=-180 hmax_angle:=180 vmin_angle:=-15 vmax_angle:=15 gpu:=true visualize:=false">

    <link name="velodyne"/>
    <joint name="velodyne_joint" type="fixed" >
      <xacro:insert_block name="origin"/>
      <parent link="base_link"/>
      <child link="velodyne"/>
    </joint>

    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
    <gazebo reference="velodyne">
      <xacro:if value="${gpu}">
        <sensor type="gpu_ray" name="${name}-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>${visualize}</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${hmin_angle*M_PI/180}</min_angle>
                <max_angle>${hmax_angle*M_PI/180}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>${vmin_angle*M_PI/180.0}</min_angle>
                <max_angle>${vmax_angle*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
            <topicName>${topic}</topicName>
            <frameName>velodyne</frameName>
            <organize_cloud>${organize_cloud}</organize_cloud>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:if>
      <xacro:unless value="${gpu}">
        <sensor type="ray" name="${name}-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>${visualize}</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${hmin_angle*M_PI/180}</min_angle>
                <max_angle>${hmax_angle*M_PI/180}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>${vmin_angle*M_PI/180.0}</min_angle>
                <max_angle>${vmax_angle*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>${topic}</topicName>
            <frameName>velodyne</frameName>
            <organize_cloud>${organize_cloud}</organize_cloud>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:unless>
    </gazebo>

  </xacro:macro>
</robot>
